name: build

on:
  push:
    branches:
      - 'master'
  pull_request:

jobs:
  tests:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest, windows-latest]
        python-version: [2.7, 3.5, 3.6, 3.7]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools tox coverage codecov
        python -m pip install -r requirements/test.txt
        python -m pip install -r requirements/extra.txt
        python -m pip install -r requirements/project.txt
    - name: Test with pytest
      run: |
        python -m pytest --cov pymdownx --cov-append tests
        python -m coverage html -d coverage
        python -m coverage report --show-missing
    - name: Coverage Report
      if: success()
      run: |
        python -m codecov -t ${{ secrets.CODECOV_TOKEN }}

  lint:
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -r requirements/lint.txt
    - name: Lint
      run: |
        python -m flake8 .

  documents:
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -r requirements/docs.txt
        python -m pip install -r requirements/extra.txt
        python -m pip install -r requirements/project.txt
        npm install
    - name: Install Aspell
      run: |
        sudo apt-get install aspell aspell-en
    - name: Build documents
      run: |
        npm run-script build
        python -m mkdocs build --clean --verbose --strict
        python -m pyspelling
