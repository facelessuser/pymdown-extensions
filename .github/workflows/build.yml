name: build

on:
  push:
    branches:
      - 'main'
    tags:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  tests:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest, windows-latest]
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12', '3.13']
        include:
          - python-version: 3.8
            tox-env: py38
          - python-version: 3.9
            tox-env: py39
          - python-version: '3.10'
            tox-env: py310
          - python-version: '3.11'
            tox-env: py311
          - python-version: '3.12'
            tox-env: py312
          - python-version: '3.13'
            tox-env: py313
        # exclude:
        #   - platform: windows-latest
        #     python-version: 3.10

    env:
      TOXENV: ${{ matrix.tox-env }}

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip build tox coverage codecov
    - name: Test
      run: |
        python -m tox
    - name: Upload Results
      if: success()
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: ${{ matrix.platform }}-${{ matrix.tox-env }}
        token: ${{ secrets.CODECOV_TOKEN }} # required
        fail_ci_if_error: false

  lint:
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.11']

    env:
      TOXENV: lint

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip build tox
    - name: Lint
      run: |
        python -m tox

  documents:
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.11']

    env:
      TOXENV: documents

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '22'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip build tox
        npm install --legacy-peer-deps
    - name: Install Aspell
      run: |
        sudo apt-get install aspell aspell-en
    - name: Build documents
      run: |
        npm run build
        python -m tox
